// Mocks generated by Mockito 5.4.2 from annotations
// in codeunion/test/login/block/login_block_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:codeunion/domain/auth/entity/login_response.dart' as _i2;
import 'package:codeunion/domain/auth/entity/token.dart' as _i3;
import 'package:codeunion/domain/auth/repository/auth_repo.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponseEntity_0 extends _i1.SmartFake
    implements _i2.LoginResponseEntity {
  _FakeLoginResponseEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokensEntity_1 extends _i1.SmartFake implements _i3.TokensEntity {
  _FakeTokensEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginResponseEntity> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i2.LoginResponseEntity>.value(
            _FakeLoginResponseEntity_0(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.LoginResponseEntity>);
  @override
  _i5.Future<_i3.TokensEntity> refresh(
    String? accessToken,
    String? refreshToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [
            accessToken,
            refreshToken,
          ],
        ),
        returnValue: _i5.Future<_i3.TokensEntity>.value(_FakeTokensEntity_1(
          this,
          Invocation.method(
            #refresh,
            [
              accessToken,
              refreshToken,
            ],
          ),
        )),
      ) as _i5.Future<_i3.TokensEntity>);
  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  bool isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: false,
      ) as bool);
}
